<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.project.system.userAccount.mapper.UserAccountMapper">
    
    <resultMap type="UserAccount" id="UserAccountResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="openid"    column="openid"    />
        <result property="drivingLicence1"    column="driving_licence_1"    />
        <result property="drivingLicence2"    column="driving_licence_2"    />
        <result property="storeId"    column="store_id"    />
        <result property="statusId"    column="status_id"    />
        <association property="storeName" column="store_id" select="com.aaa.project.system.store.mapper.StoreMapper.selectStoreNameByStoreId"></association>
        <association property="status" column="status_id" select="com.aaa.project.system.status.mapper.StatusMapper.selectStatusById" />
    </resultMap>

	<sql id="selectUserAccountVo">
        select id, user_id, openid, driving_licence_1, driving_licence_2, store_id, status_id from cw_user_account
    </sql>
	
    <select id="selectUserAccountList" parameterType="UserAccount" resultMap="UserAccountResult">
        <include refid="selectUserAccountVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="userId != null "> and user_id = #{userId}</if>
             <if test="openid != null  and openid != '' "> and openid = #{openid}</if>
             <if test="drivingLicence1 != null  and drivingLicence1 != '' "> and driving_licence_1 = #{drivingLicence1}</if>
             <if test="drivingLicence2 != null  and drivingLicence2 != '' "> and driving_licence_2 = #{drivingLicence2}</if>
             <if test="storeId != null  and storeId != '' "> and store_id = #{storeId}</if>
         </where>
    </select>
    <select id="selectUserAccountByStoreId" parameterType="list" resultMap="UserAccountResult">
        <include refid="selectUserAccountVo"/> where store_id=<foreach item="storeIds" collection="list">
        #{list.store_Id}
    </foreach>
    </select>
    <select id="selectStoreIdByOpenId" parameterType="string" resultType="string">
        select store_id from cw_user_account where openid=#{#openid}
    </select>
    <select id="selectUserAccountById" parameterType="Integer" resultMap="UserAccountResult">
        <include refid="selectUserAccountVo"/>
        where id = #{id}
    </select>

    <select id="selectUserAccountByUserId" parameterType="Long" resultMap="UserAccountResult">
        <include refid="selectUserAccountVo"/>
        where user_id = #{userId}
    </select>

    <select id="selectStoreIdByUserId" parameterType="Long" resultType="String">
        select store_id from cw_user_account where user_id = #{userId}
    </select>

    <insert id="insertUserAccount" parameterType="UserAccount">
        insert into cw_user_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  ">id,</if>
			<if test="userId != null  ">user_id,</if>
			<if test="openid != null  and openid != ''  ">openid,</if>
			<if test="drivingLicence1 != null  and drivingLicence1 != ''  ">driving_licence_1,</if>
			<if test="drivingLicence2 != null  and drivingLicence2 != ''  ">driving_licence_2,</if>
			<if test="storeId != null  and storeId != ''  ">store_id,</if>
            <if test="statusId != null  and statusId != ''  ">status_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  ">#{id},</if>
			<if test="userId != null  ">#{userId},</if>
			<if test="openid != null  and openid != ''  ">#{openid},</if>
			<if test="drivingLicence1 != null  and drivingLicence1 != ''  ">#{drivingLicence1},</if>
			<if test="drivingLicence2 != null  and drivingLicence2 != ''  ">#{drivingLicence2},</if>
			<if test="storeId != null  and storeId != ''  ">#{storeId},</if>
            <if test="statusId != null  and statusId != ''  ">#{statusId},</if>
         </trim>
    </insert>
	 
    <update id="updateUserAccount" parameterType="UserAccount">
        update cw_user_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null  ">user_id = #{userId},</if>
            <if test="openid != null  and openid != ''  ">openid = #{openid},</if>
            <if test="drivingLicence1 != null  and drivingLicence1 != ''  ">driving_licence_1 = #{drivingLicence1},</if>
            <if test="drivingLicence2 != null  and drivingLicence2 != ''  ">driving_licence_2 = #{drivingLicence2},</if>
            <if test="storeId != null  and storeId != ''  ">store_id = #{storeId},</if>
            <if test="statusId != null  and statusId != ''  ">status_id = #{statusId},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteUserAccountById" parameterType="Integer">
        delete from cw_user_account where id = #{id}
    </delete>
	
    <delete id="deleteUserAccountByIds" parameterType="String">
        delete from cw_user_account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="cleanOpenid">
        update cw_user_account
        set openid = NULL
        where openid = #{openid}
    </update>

    <update id="bindAccountWithOpenid">
        update cw_user_account
        set openid = #{openid}
        where user_id = #{userId}
    </update>

</mapper>